"Authors","Author full names","Author(s) ID","Title","Year","Source title","Volume","Issue","Art. No.","Page start","Page end","Page count","Cited by","DOI","Link","Affiliations","Authors with affiliations","Abstract","Author Keywords","Index Keywords","Document Type","Publication Stage","Open Access","Source","EID"
"Pérez-Delgado C.A.; Perez-Gonzalez H.G.","Pérez-Delgado, Carlos A. (14521565800); Perez-Gonzalez, Hector G. (25925251900)","14521565800; 25925251900","Towards a Quantum Software Modeling Language","2020","Proceedings - 2020 IEEE/ACM 42nd International Conference on Software Engineering Workshops, ICSEW 2020","","","","442","444","2","23","10.1145/3387940.3392183","https://www.scopus.com/inward/record.uri?eid=2-s2.0-85093114589&doi=10.1145%2f3387940.3392183&partnerID=40&md5=947c95e59d0ac508e414113057bfc4e3","University of Kent, Canterbury, United Kingdom; Universidad Autónoma de San Luis Potosí, San Luis Potosí, SLP, Mexico","Pérez-Delgado C.A., University of Kent, Canterbury, United Kingdom; Perez-Gonzalez H.G., Universidad Autónoma de San Luis Potosí, San Luis Potosí, SLP, Mexico","We set down the principles behind a modeling language for quantum software. We present a minimal set of extensions to the well-known Unified Modeling Language (UML) that allows it to effectively model quantum software. These extensions are separate and independent of UML as a whole. As such they can be used to extend any other software modeling language, or as a basis for a completely new language. We argue that these extensions are both necessary and sufficient to model, abstractly, any piece of quantum software. Finally, we provide a small set of examples that showcase the effectiveness of the extension set.  © 2020 ACM.","quantum computing; software engineering; UML","Software engineering; Technical presentations; Extension sets; Set-down; Software modeling languages; Unified Modeling Language","Conference paper","Final","All Open Access; Green Open Access","Scopus","2-s2.0-85093114589"
"Cervantes-Vazquez D.; Ochoa-Jimenez E.; Rodriguez-Henriquez F.","Cervantes-Vazquez, Daniel (57201742345); Ochoa-Jimenez, Eduardo (57194188640); Rodriguez-Henriquez, Francisco (6602522316)","57201742345; 57194188640; 6602522316","Parallel Strategies for SIDH: Toward Computing SIDH Twice as Fast","2022","IEEE Transactions on Computers","71","6","","1249","1260","11","2","10.1109/TC.2021.3080139","https://www.scopus.com/inward/record.uri?eid=2-s2.0-85105874327&doi=10.1109%2fTC.2021.3080139&partnerID=40&md5=861e5c952c87ccd16f9e2576af03d916","Computer Science Department, Center for Research and Advanced Studies, Mexico City, 07360, Mexico; Technology Innovation Institute (TII), Abu Dhabi, United Arab Emirates","Cervantes-Vazquez D., Computer Science Department, Center for Research and Advanced Studies, Mexico City, 07360, Mexico; Ochoa-Jimenez E., Computer Science Department, Center for Research and Advanced Studies, Mexico City, 07360, Mexico; Rodriguez-Henriquez F., Computer Science Department, Center for Research and Advanced Studies, Mexico City, 07360, Mexico, Technology Innovation Institute (TII), Abu Dhabi, United Arab Emirates","We present novel strategies and concrete algorithms for the parallel computation of the Supersingular Isogeny-based Diffie-Hellman key exchange (SIDH) protocol when executed on multi-core platforms. The most relevant design idea exploited by our approach is that of concurrently computing scalar multiplication operations along with a parallelized version of the strategies required for constructing and evaluating large smooth degree isogenies. We report experimental results showing that a three-core implementation of our parallel approach achieves an acceleration factor of 1.45 compared against a sequential implementation of the Supersingular Isogeny Key Encapsulation (SIKE) protocol instantiated with the prime p751.  © 1968-2012 IEEE.","Isogenies; Isogeny-based cryptography; parallel computing; post-quantum cryptography; public-key cryptography; SIKE","Software engineering; Acceleration factors; Diffie-Hellman key exchange; Multi-core platforms; Parallel Computation; Parallel strategies; Parallelized version; Scalar multiplication; Sequential implementation; Computer science","Article","Final","","Scopus","2-s2.0-85105874327"
